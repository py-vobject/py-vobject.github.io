{
  "name": "VObject",
  "tagline": "A full-featured Python package for parsing and creating iCalendar and vCard files",
  "body": "# About VObject\r\n\r\nVObject is intended to be a full-featured Python package for parsing and generating vCard and vCalendar files. It was originally developed in concert with the Open Source Application Foundation's Chandler project by Jeffrey Harris. Many thanks to [all the contributors](https://github.com/py-vobject/vobject/blob/master/ACKNOWLEDGEMENTS.txt) for their dedication and support.\r\n\r\nCurrently, iCalendar files are supported and well tested. vCard 3.0 files are supported, and all data should be imported, but only a few components are understood in a sophisticated way. The [Calendar Server](http://calendarserver.org/) team has added VAVAILABILITY support to VObject's iCalendar parsing. Please report bugs and issues directly on [GitHub](https://github.com/py-vobject/vobject/issues).\r\n\r\nVObject is licensed under the [Apache 2.0 license](http://www.apache.org/licenses/LICENSE-2.0). [![License](https://img.shields.io/pypi/l/vobject.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\r\n\r\nUseful scripts included with VObject:\r\n\r\n* [ics_diff](https://github.com/py-vobject/vobject/blob/master/vobject/ics_diff.py): order is irrelevant in iCalendar files, return a diff of meaningful changes between icalendar files\r\n* [change_tz](https://github.com/py-vobject/vobject/blob/master/vobject/change_tz.py): Take an iCalendar file with events in the wrong timezone, change all events or just UTC events into one of the timezones PyICU supports. Requires [PyICU](https://pypi.python.org/pypi/PyICU/).\r\n\r\n\r\n# Installation [![PyPI version](https://badge.fury.io/py/vobject.svg)](https://pypi.python.org/pypi/vobject)\r\n\r\nTo install with [pip](https://pypi.python.org/pypi/pip), run:\r\n\r\n```\r\npip install vobject\r\n```\r\n\r\n\r\nOr download the package and run:\r\n\r\n```\r\npython setup.py install\r\n```\r\n\r\nVObject requires Python 2.7 or higher, along with the [dateutil](https://pypi.python.org/pypi/python-dateutil/) and [six](https://pypi.python.org/pypi/six) packages.\r\n\r\n\r\n# Running tests [![Build Status](https://travis-ci.org/py-vobject/vobject.svg?branch=master)](https://travis-ci.org/py-vobject/vobject)\r\n\r\nTo run all tests, use:\r\n\r\n```\r\npython tests/tests.py\r\n```\r\n\r\n\r\n# Usage\r\n\r\n## iCalendar\r\n\r\n#### Creating iCalendar objects\r\n\r\nVObject has a basic datastructure for working with iCalendar-like\r\nsyntaxes.  Additionally, it defines specialized behaviors for many of\r\nthe commonly used iCalendar objects.\r\n\r\nTo create an object that already has a behavior defined, run:\r\n\r\n```\r\n>>> import vobject\r\n>>> &gt; cal = vobject.newFromBehavior('vcalendar')\r\n>>> cal.behavior\r\n<class 'vobject.icalendar.VCalendar2_0'>\r\n```\r\n\r\nConvenience functions exist to create iCalendar and vCard objects:\r\n\r\n```\r\n>>> cal = vobject.iCalendar()\r\n>>> cal.behavior\r\n<class 'vobject.icalendar.VCalendar2_0'>\r\n>>> card = vobject.vCard()\r\n>>> card.behavior\r\n<class 'vobject.vcard.VCard3_0'>\r\n```\r\n\r\nOnce you have an object, you can use the add method to create\r\nchildren:\r\n\r\n```\r\n>>> cal.add('vevent')\r\n<VEVENT| []>\r\n>>> cal.vevent.add('summary').value = \"This is a note\"\r\n>>> cal.prettyPrint()\r\n VCALENDAR\r\n    VEVENT\r\n       SUMMARY: This is a note\r\n```\r\n\r\nNote that summary is a little different from vevent, it's a\r\nContentLine, not a Component.  It can't have children, and it has a\r\nspecial value attribute.\r\n\r\nContentLines can also have parameters.  They can be accessed with\r\nregular attribute names with _param appended:\r\n\r\n```\r\n>>> cal.vevent.summary.x_random_param = 'Random parameter'\r\n>>> cal.prettyPrint()\r\n VCALENDAR\r\n    VEVENT\r\n       SUMMARY: This is a note\r\n       params for  SUMMARY:\r\n          X-RANDOM ['Random parameter']\r\n```\r\n\r\nThere are a few things to note about this example\r\n\r\n  * The underscore in x_random is converted to a dash (dashes are\r\n    legal in iCalendar, underscores legal in Python)\r\n  * X-RANDOM's value is a list.\r\n\r\nIf you want to access the full list of parameters, not just the first,\r\nuse &lt;paramname&gt;_paramlist:\r\n\r\n```\r\n>>> cal.vevent.summary.x_random_paramlist\r\n['Random parameter']\r\n>>> cal.vevent.summary.x_random_paramlist.append('Other param')\r\n>>> cal.vevent.summary\r\n<SUMMARY{'X-RANDOM': ['Random parameter', 'Other param']}This is a note>\r\n```\r\n\r\nSimilar to parameters, If you want to access more than just the first child of a Component, you can access the full list of children of a given name by appending _list to the attribute name:\r\n\r\n```\r\n>>> cal.add('vevent').add('summary').value = \"Second VEVENT\"\r\n>>> for ev in cal.vevent_list:\r\n...     print ev.summary.value\r\nThis is a note\r\nSecond VEVENT\r\n```\r\n\r\nThe interaction between the del operator and the hiding of the\r\nunderlying list is a little tricky, del cal.vevent and del\r\ncal.vevent_list both delete all vevent children:\r\n\r\n```\r\n>>> first_ev = cal.vevent\r\n>>> del cal.vevent\r\n>>> cal\r\n<VCALENDAR| []>\r\n>>> cal.vevent = first_ev\r\n```\r\n\r\nVObject understands Python's datetime module and tzinfo classes.\r\n\r\n```\r\n>>> import datetime\r\n>>> utc = vobject.icalendar.utc\r\n>>> start = cal.vevent.add('dtstart')\r\n>>> start.value = datetime.datetime(2006, 2, 16, tzinfo = utc)\r\n>>> first_ev.prettyPrint()\r\n     VEVENT\r\n        DTSTART: 2006-02-16 00:00:00+00:00\r\n        SUMMARY: This is a note\r\n        params for  SUMMARY:\r\n           X-RANDOM ['Random parameter', 'Other param']\r\n```\r\n\r\nComponents and ContentLines have serialize methods:\r\n\r\n```\r\n>>> cal.vevent.add('uid').value = 'Sample UID'\r\n>>> icalstream = cal.serialize()\r\n>>> print icalstream\r\nBEGIN:VCALENDAR\r\nVERSION:2.0\r\nPRODID:-//PYVOBJECT//NONSGML Version 1//EN\r\nBEGIN:VEVENT\r\nUID:Sample UID\r\nDTSTART:20060216T000000Z\r\nSUMMARY;X-RANDOM=Random parameter,Other param:This is a note\r\nEND:VEVENT\r\nEND:VCALENDAR\r\n```\r\n\r\nObserve that serializing adds missing required lines like version and\r\nprodid.  A random UID would be generated, too, if one didn't exist.\r\n\r\nIf dtstart's tzinfo had been something other than UTC, an appropriate\r\nvtimezone would be created for it.\r\n\r\n\r\n#### Parsing iCalendar objects\r\n\r\nTo parse one top level component from an existing iCalendar stream or\r\nstring, use the readOne function:\r\n\r\n```\r\n>>> parsedCal = vobject.readOne(icalstream)\r\n>>> parsedCal.vevent.dtstart.value\r\ndatetime.datetime(2006, 2, 16, 0, 0, tzinfo=tzutc())\r\n```\r\n\r\nSimilarly, readComponents is a generator yielding one top level component at a time from a stream or string.\r\n\r\n```\r\n>>> vobject.readComponents(icalstream).next().vevent.dtstart.value\r\ndatetime.datetime(2006, 2, 16, 0, 0, tzinfo=tzutc())\r\n```\r\n\r\nMore examples can be found in source code doctests.\r\n\r\n\r\n## vCards\r\n\r\n#### Creating vCard objects\r\n\r\nMaking vCards proceeds in much the same way. Note that the 'N' and 'FN'\r\nattributes are required.\r\n\r\n```\r\n>>> j = vobject.vCard()\r\n>>> j.add('n')\r\n <N{}    >\r\n>>> j.n.value = vobject.vcard.Name( family='Harris', given='Jeffrey' )\r\n>>> j.add('fn')\r\n <FN{}>\r\n>>> j.fn.value ='Jeffrey Harris'\r\n>>> j.add('email')\r\n <EMAIL{}>\r\n>>> j.email.value = 'jeffrey@osafoundation.org'\r\n>>> j.email.type_param = 'INTERNET'\r\n>>> j.prettyPrint()\r\n VCARD\r\n    EMAIL: jeffrey@osafoundation.org\r\n    params for  EMAIL:\r\n       TYPE ['INTERNET']\r\n    FN: Jeffrey Harris\r\n    N:  Jeffrey  Harris\r\n```\r\n\r\nserializing will add any required computable attributes (like 'VERSION')\r\n\r\n```\r\n>>> j.serialize()\r\n'BEGIN:VCARD\\r\\nVERSION:3.0\\r\\nEMAIL;TYPE=INTERNET:jeffrey@osafoundation.org\\r\\nFN:Jeffrey Harris\\r\\nN:Harris;Jeffrey;;;\\r\\nEND:VCARD\\r\\n'\r\n>>> j.prettyPrint()\r\n VCARD\r\n    VERSION: 3.0\r\n    EMAIL: jeffrey@osafoundation.org\r\n    params for  EMAIL:\r\n       TYPE ['INTERNET']\r\n    FN: Jeffrey Harris\r\n    N:  Jeffrey  Harris \r\n```\r\n\r\n#### Parsing vCard objects\r\n\r\n```\r\n>>> s = \"\"\"\r\n... BEGIN:VCARD\r\n... VERSION:3.0\r\n... EMAIL;TYPE=INTERNET:jeffrey@osafoundation.org\r\n... FN:Jeffrey Harris\r\n... N:Harris;Jeffrey;;;\r\n... END:VCARD\r\n... \"\"\"\r\n>>> v = vobject.readOne( s )\r\n>>> v.prettyPrint()\r\n VCARD\r\n    VERSION: 3.0\r\n    EMAIL: jeffrey@osafoundation.org\r\n    params for  EMAIL:\r\n       TYPE [u'INTERNET']\r\n    FN: Jeffrey Harris\r\n    N:  Jeffrey  Harris\r\n>>> v.n.value.family\r\nu'Harris'\r\n```\r\n\r\n\r\n# Release History\r\n\r\n### 26 August 2016\r\n\r\n**vobject 0.9.3** released ([view](https://github.com/py-vobject/vobject/releases/tag/0.9.3)).\r\n\r\nTo install, use `pip install vobject`, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](https://pypi.python.org/pypi/python-dateutil/) and [six](https://pypi.python.org/pypi/six) are required. Python 2.7 or higher is required.\r\n\r\n##### Release Notes\r\n\r\n*   Fixed use of doc in setup.py for -OO mode\r\n*   Added python3 compatibility for base64 encoding\r\n*   Fixed ORG fields with multiple components\r\n*   Handle pytz timezones in iCalendar serialization\r\n*   Use logging instead of printing to stdout\r\n\r\n\r\n***\r\n\r\n\r\n### 13 March 2016\r\n\r\n**vobject 0.9.2** released ([view](https://github.com/py-vobject/vobject/releases/tag/0.9.2)).\r\n\r\nTo install, use `pip install vobject`, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](https://pypi.python.org/pypi/python-dateutil/) and [six](https://pypi.python.org/pypi/six) are required. Python 2.7 or higher is required.\r\n\r\n##### Release Notes\r\n\r\n*   Better line folding for utf-8 strings\r\n*   Convert unicode to utf-8 to be StringIO compatible\r\n\r\n\r\n***\r\n\r\n\r\n### 16 February 2016\r\n\r\n**vobject 0.9.1** released ([view](https://github.com/py-vobject/vobject/releases/tag/0.9.1)).\r\n\r\nTo install, use `pip install vobject`, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](https://pypi.python.org/pypi/python-dateutil/) and [six](https://pypi.python.org/pypi/six) are required. Python 2.7 or higher is now required.\r\n\r\n##### Release Notes\r\n\r\n*   Removed lock on dateutil version (>=2.4.0 now works)\r\n\r\n\r\n***\r\n\r\n\r\n### 3 February 2016\r\n\r\n**vobject 0.9.0** released ([view](https://github.com/py-vobject/vobject/releases/tag/0.9.0)).\r\n\r\nTo install, use `pip install vobject`, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil 2.4.0](https://pypi.python.org/pypi/python-dateutil/) and [six](https://pypi.python.org/pypi/six) are required. Python 2.7 or higher is now required.\r\n\r\n##### Release Notes\r\n\r\n*   Python 3 compatible\r\n*   Updated version of dateutil (2.4.0)\r\n*   More comprehensive unit tests available in tests.py\r\n*   Performance improvements in iteration\r\n*   Test files are included in PyPI download package\r\n\r\n\r\n***\r\n\r\n\r\n### 28 January 2016\r\n\r\n**vobject 0.8.2** released ([view](https://github.com/py-vobject/vobject/releases/tag/0.8.2)).\r\n\r\nTo install, use `pip install vobject`, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Removed unnecessary ez_setup call from setup.py\r\n\r\n\r\n***\r\n\r\n\r\n### 27 February 2009\r\n\r\n**vobject 0.8.1c** released (SVN revision 217).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Tweaked change_tz.py to keep it 2.4 compatible\r\n\r\n\r\n***\r\n\r\n\r\n### 12 January 2009\r\n\r\n**vobject 0.8.1b** released (SVN revision 216).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Change behavior when import a VCALENDAR or VCARD with an older or absent VERSION line, now the most recent behavior (i.e., VCARD 3.0 and iCalendar, VCALENDAR 2.0) is used\r\n\r\n\r\n***\r\n\r\n\r\n### 29 December 2008\r\n\r\n**vobject 0.8.0** released (SVN revision 213).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Changed license to Apache 2.0 from Apache 1.1\r\n*   Fixed a major performance bug in backslash decoding large text bodies\r\n*   Added workaround for strange Apple Address Book parsing of vcard PHOTO, don't wrap PHOTO by default. To disable this behavior, set vobject.vcard.wacky_apple_photo_serialize to False.\r\n\r\n\r\n***\r\n\r\n\r\n### 25 July 2008\r\n\r\n**vobject 0.7.1** released (SVN revision 208).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Add change_tz script for converting timezones in iCalendar files\r\n\r\n\r\n***\r\n\r\n\r\n### 16 July 2008\r\n\r\n**vobject 0.7.0** released (SVN revision 206).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Allow Outlook's technically illegal use of commas in TZIDs\r\n*   Added introspection help for IPython so tab completion works with vobject's custom __getattr__\r\n*   Made vobjects pickle-able\r\n*   Added tolerance for the escaped semi-colons in RRULEs a Ruby iCalendar library generates\r\n*   Fixed [Bug 12245](https://bugzilla.osafoundation.org/show_bug.cgi?id=12245), setting an rrule from a dateutil instance missed BYMONTHDAY when the number used is negative\r\n\r\n\r\n***\r\n\r\n\r\n### 30 May 2008\r\n\r\n**vobject 0.6.6** released (SVN revision 201).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Fixed [bug 12120](https://bugzilla.osafoundation.org/show_bug.cgi?id=12120), unicode TZIDs were failing to parse.\r\n\r\n\r\n***\r\n\r\n\r\n### 28 May 2008\r\n\r\n**vobject 0.6.5** released (SVN revision 200).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. Tests can be run via python setup.py test. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Fixed [bug 9814](https://bugzilla.osafoundation.org/show_bug.cgi?id=9814), quoted-printable data wasn't being decoded into unicode, thanks to Ilpo Nyyssönen for the fix.\r\n*   Fixed [bug 12008](https://bugzilla.osafoundation.org/show_bug.cgi?id=12008), silently translate buggy Lotus Notes names with underscores into dashes.\r\n\r\n\r\n***\r\n\r\n\r\n### 21 February 2008\r\n\r\n**vobject 0.6.0** released (SVN revision 193).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Added VAVAILABILITY support, thanks to the Calendar Server team.\r\n*   Improved unicode line folding.\r\n\r\n\r\n***\r\n\r\n\r\n### 14 January 2008\r\n\r\n**vobject 0.5.0** released (SVN revision 189).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Updated to more recent ez_setup, vobject wasn't successfully installing.\r\n\r\n\r\n***\r\n\r\n\r\n### 19 November 2007\r\n\r\n**vobject 0.4.9** released (SVN revision 187).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Tolerate invalid UNTIL values for recurring events\r\n*   Minor improvements to logging and tracebacks\r\n*   Fix serialization of zero-delta durations\r\n*   Treat different tzinfo classes that represent UTC as equal\r\n*   Added ORG behavior to vCard handling, native value for ORG is now a list.\r\n\r\n\r\n***\r\n\r\n\r\n### 7 January 2007\r\n\r\n**vobject 0.4.8** released (SVN revision 180).\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Fixed problem with the UNTIL time used when creating a dateutil rruleset.\r\n\r\n\r\n***\r\n\r\n\r\n### 21 December 2006\r\n\r\n**vobject 0.4.7** released (SVN revision 172), hot on the heals of yesterday's 0.4.6.\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Fixed a problem causing DATE valued RDATEs and EXDATEs to be ignored when interpreting recurrence rules\r\n*   And, from the short lived vobject 0.4.6, added an ics_diff module and an ics_diff command line script for comparing similar iCalendar files\r\n\r\n\r\n***\r\n\r\n\r\n### 20 December 2006\r\n\r\n**vobject 0.4.6** released (SVN revision 171)\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Added an ics_diff module and an ics_diff command line script for comparing similar iCalendar files\r\n\r\n\r\n***\r\n\r\n\r\n### 8 December 2006\r\n\r\n**vobject 0.4.5** released (SVN revision 168)\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Added ignoreUnreadable flag to readOne and readComponents\r\n*   Tolerate date-time or date fields incorrectly failing to set VALUE=DATE for date values\r\n*   Cause unrecognized lines to default to use a text behavior, so commas, carriage returns, and semi-colons are escaped properly in unrecognized lines\r\n\r\n\r\n***\r\n\r\n\r\n### 9 October 2006\r\n\r\n**vobject 0.4.4** released (SVN revision 159)\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 1.1 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Merged in Apple CalendarServer patches as of CalendarServer-r191\r\n*   Added copy and duplicate code to base module\r\n*   Improved recurring VTODO handling\r\n*   Save TZIDs when parsed and use them as back up TZIDs when serializing\r\n\r\n\r\n***\r\n\r\n\r\n### 22 September 2006\r\n\r\n**vobject 0.4.3** released (SVN revision 157)\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Added support for PyTZ tzinfo classes.\r\n\r\n\r\n***\r\n\r\n\r\n### 29 August 2006\r\n\r\n**vobject 0.4.2** released (SVN revision 153)\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Updated ez_setup.py to use the latest setuptools.\r\n\r\n\r\n***\r\n\r\n\r\n### 4 August 2006\r\n\r\n**vobject 0.4.1** released (SVN revision 152)\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   When vobject encounters ascii, it now tries utf-8, then utf-16 with either LE or BE byte orders, searching for BEGIN in the decoded string to determine if it's found an encoding match. readOne and readComponents will no longer work on arbitrary Versit style ascii streams unless the optional findBegin flag is set to False\r\n\r\n\r\n***\r\n\r\n\r\n### 2 August 2006\r\n\r\n**vobject 0.4.0** released (SVN revision 151)\r\n\r\nTo install, use easy_install, or download the archive and untar, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Workarounds for common invalid files produced by Apple's iCal and AddressBook\r\n*   Added getChildValue convenience method\r\n*   Added experimental hCalendar serialization\r\n*   Handle DATE valued EXDATE and RRULEs better\r\n\r\n\r\n***\r\n\r\n\r\n### 17 February 2006\r\n\r\n**vobject 0.3.0** released (SVN revision 129)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Changed API for accessing children and parameters, attributes now return the first child or parameter, not a list. See [usage](usage.html) for examples\r\n*   Added support for groups, a vcard feature\r\n*   Added behavior for FREEBUSY lines\r\n*   Worked around problem with dateutil's treatment of experimental properties (bug 4978)\r\n*   Fixed bug 4992, problem with rruleset when addRDate is set\r\n\r\n\r\n***\r\n\r\n\r\n### 9 January 2006\r\n\r\n**vobject 0.2.3** released (SVN revision 104)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Added VERSION line back into native iCalendar objects\r\n*   Added a first stab at a vcard module, parsing of vCard 3.0 files now gives structured values for N and ADR properties\r\n*   Fix bug in regular expression causing the '^' character to not parse\r\n\r\n\r\n***\r\n\r\n\r\n### 4 November 2005\r\n\r\n**vobject 0.2.2** released (SVN revision 101)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Fixed problem with add('duration')\r\n*   Fixed serialization of EXDATEs which are dates or have floating timezone\r\n*   Fixed problem serializing timezones with no daylight savings time\r\n\r\n\r\n***\r\n\r\n\r\n### 10 October 2005\r\n\r\n**vobject 0.2.0** released (SVN revision 97)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Added serialization of arbitrary tzinfo classes as VTIMEZONEs\r\n*   Removed unused methods\r\n*   Changed getLogicalLines to use regular expressions, dramatically speeding it up\r\n*   Changed rruleset behavior to use a property for rruleset\r\n\r\n\r\n***\r\n\r\n\r\n### 30 September 2005\r\n\r\n**vobject 0.1.4** released (SVN revision 93)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. As of this release, Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Changed parseLine to use regular expression instead of a state machine, reducing parse time dramatically\r\n\r\n\r\n***\r\n\r\n\r\n### 1 July 2005\r\n\r\n**vobject 0.1.3** released (SVN revision 88)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) 0.9 or later is required. As of this release, Python 2.4 is also required.\r\n\r\n##### Release Notes\r\n\r\n*   Added license and acknowledgements.\r\n*   Fixed the fact that defaultSerialize wasn't escaping linefeeds\r\n*   Updated backslashEscape to encode CRLF's and bare CR's as linefeeds, which seems to be what RFC2445 requires\r\n\r\n\r\n***\r\n\r\n\r\n### 24 March 2005\r\n\r\n**vobject 0.1.2** released (SVN revision 83)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) is required. You'll need to apply this [patch](dateutil-0.5-tzoffset-bug.patch) to be able to read certain VTIMEZONEs exported by Apple iCal, or if you happen to be in Europe!\r\n\r\npatch -R $PYTHONLIB/site-packages/dateutil/tz.py dateutil-0.5-tzoffset-bug.patch\r\n\r\n##### Release Notes\r\n\r\n*   Fixed printing of non-ascii unicode.\r\n*   Fixed bug preventing content lines with empty contents from parsing.\r\n\r\n\r\n***\r\n\r\n\r\n### 25 January 2005\r\n\r\n**vobject 0.1.1** released (SVN revision 82)\r\n\r\nTo install, untar the archive, run python setup.py install. [dateutil](http://labix.org/python-dateutil#head-2f49784d6b27bae60cde1cff6a535663cf87497b) is required. You'll need to apply this [patch](dateutil-0.5-tzoffset-bug.patch) to be able to read certain VTIMEZONEs exported by Apple iCal, or if you happen to be in Europe!\r\n\r\npatch -R $PYTHONLIB/site-packages/dateutil/tz.py dateutil-0.5-tzoffset-bug.patch\r\n\r\n##### Release Notes\r\n\r\n*   Various bug fixes involving recurrence.\r\n*   TRIGGER and VALARM behaviors set up.\r\n\r\n\r\n***\r\n\r\n\r\n### 13 December 2004\r\n\r\n**vobject 0.1** released (SVN revision 70)\r\n\r\n##### Release Notes\r\n\r\n*   Parsing all iCalendar files should be working, please [file a bug](bugs/) if you can't read one!\r\n*   Timezones can be set for datetimes, but currently they'll be converted to UTC for serializing, because VTIMEZONE serialization isn't yet working.\r\n*   RRULEs can be parsed, but when they're serialized, they'll be converted to a maximum of 500 RDATEs, because RRULE serialization isn't yet working.\r\n*   To parse unicode, see [issue 4](http://vobject.skyhouseconsulting.com/bugs/issue4).\r\n*   Much more testing is needed, of course!\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
